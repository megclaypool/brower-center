var GF_Geo={options:ggfSettings,country_code:"US",navigator_timeout:1e4,field_locator:{},map:{args:!1,options:!1,map:!1,latLng:!1,marker:!1},processing:{status:!1,element:!1,coords:[]},navigator_error_messages:{1:"User denied the request for Geolocation.",2:"Location information is unavailable.",3:"The request to get user location timed out.",4:"An unknown error occurred",5:"Sorry! Geolocation is not supported by this browser."},auto_locator:{status:!1,id:!1,success:!1,failed:!1,auto_submit:!1},address_autocomplete:{field:!1,settings:!1},submit_form:!1,init:function(){1==GF_Geo.options.locator_hide_submit&&jQuery("#gform_submit_button_"+GF_Geo.options.id).hide(),jQuery("#ggf-map").length&&(GF_Geo.map.args=mapArgs,GF_Geo.render_map()),1==GF_Geo.options.auto_locator.use&&GF_Geo.auto_locator("page_load",GF_Geo.page_locator_success,!1),jQuery(".ggf-autocomplete").each(function(){jQuery(this).is("[id]")&&GF_Geo.address_autocomplete(jQuery(this).attr("id"),!1)}),jQuery(".gform-address-field").length&&GF_Geo.init_advanced_address_field(),jQuery("#gform_submit_button_"+GF_Geo.options.id).on("click",function(e){return jQuery(".ggf-geocode-field").length&&1!=GF_Geo.submit_form?void GF_Geo.form_submission(e):!0}),jQuery(".ggf-field-locator-button").length&&jQuery(".ggf-field-locator-button").each(function(){var e=jQuery(this).attr("id").split("_");e=e[e.length-1],GF_Geo.field_locator='<span class="ggf-field-locator-wrapper">',GF_Geo.field_locator+='<img class="ggf-locator-button locator-'+e+'" locator-id="'+e+'" style="box-shadow: none;border-radius:0" src="'+GF_Geo.options.images_url+'/assets/images/locator.png" />',GF_Geo.field_locator+='<img class="ggf-locator-spinner spinner-'+e+'" style="display:none; box-shadow: none;border-radius:0" src="'+GF_Geo.options.images_url+'/assets/images/loader.gif" />',GF_Geo.field_locator+="</span>",jQuery(this).hasClass("gform-address-field")?jQuery(this).find(".ggf-advanced-address-autocomplete-wrapper").append(GF_Geo.field_locator):jQuery(this).find(".ginput_container").append(GF_Geo.field_locator)}),jQuery(".ggf-locator-button").on("click",function(){field_id=jQuery(this).attr("locator-id"),GF_Geo.auto_locator(field_id,GF_Geo.locator_button_success,!1)}),jQuery(".ggf-field").length&&jQuery('.ggf-field input[type="text"]').on("input",function(){GF_Geo.clear_fields()})},clear_fields:function(){jQuery('#ggf-text-fields-wrapper [id^="ggf-field"], [class*="ggf-cf-"] input[type="text"], [class*="ggf-cf-"] input[type="hidden"]').val(""),jQuery('[class*="ggf-cf-"] input[type="radio"], [class*="ggf-cf-"] input[type="checkbox"]').prop("checked",!1)},submit_form:function(){setTimeout(function(){return GF_Geo.submit_form=!0,jQuery("#gform_"+GF_Geo.options.id).submit(),!1},1e3)},navigator:function(e,t){function o(o){GF_Geo.geocoder([o.coords.latitude,o.coords.longitude],e,t)}function a(e){t(GF_Geo.navigator_error_messages[e.code])}return e="undefined"==e||0==e?GF_Geo.navigator_success:e,t="undefined"==t||0==t?GF_Geo.navigator_failed:t,navigator.geolocation?void navigator.geolocation.getCurrentPosition(o,a,{timeout:GF_Geo.navigator_timeout}):t(GF_Geo.navigator_error_messages[5])},navigator_success:function(e){GF_Geo.save_location_fields(e)},navigator_failed:function(e){alert(e)},geocoder:function(e,t,o){countryCode=void 0!=GF_Geo.options.country_code?GF_Geo.options.country_code:"us","object"==typeof e?data={latLng:new google.maps.LatLng(e[0],e[1]),region:countryCode}:data={address:e,region:countryCode},geocoder=new google.maps.Geocoder,geocoder.geocode(data,function(e,a){return a==google.maps.GeocoderStatus.OK?void 0!=t&&0!=t?t(e[0]):GF_Geo.geocoder_success(e[0]):void 0!=o&&0!=o?o(a):GF_Geo.geocoder_failed(a)})},geocoder_success:function(e){},geocoder_failed:function(e){alert("We could not find the address you entered for the following reason: "+e)},init_advanced_address_field:function(){jQuery(".gform-address-field").each(function(){var e=jQuery(this),t="",o="";e.hasClass("ggf-autocomplete")&&(autocompleteWrapper=e.find(".ggf-advanced-address-autocomplete-wrapper"),tabindex=e.find(".ginput_complex input[type=text]").not(".ggf-advanced-address-autocomplete").attr("tabindex"),autocompleteWrapper.detach().prependTo(e.find(".ginput_complex")).show().find("input[type=text]").attr("tabindex",tabindex)),e.hasClass("locator-fill")&&(t+=" locator-fill",o="ggf-cf"),e.hasClass("map-autofill")&&(t+=" map-autofill",o="ggf-cf"),e.hasClass("ggf-advanced-geocode-true")&&(o="ggf-field ggf-field"),e.find(jQuery("[id$=_1_container]")).addClass(o+"-street ggf-advanced-address-cf-field "+t),e.find(jQuery("[id$=_2_container]")).addClass(o+"-apt ggf-advanced-address-cf-field "+t),e.find(jQuery("[id$=_3_container]")).addClass(o+"-city ggf-advanced-address-cf-field "+t),e.find(jQuery("[id$=_4_container]")).addClass(o+"-state ggf-advanced-address-cf-field "+t),e.find(jQuery("[id$=_5_container]")).addClass(o+"-zipcode ggf-advanced-address-cf-field "+t),e.find(jQuery("[id$=_6_container]")).addClass(o+"-country ggf-advanced-address-cf-field "+o+"-country_long "+t)})},render_map:function(){GF_Geo.map.latlng=new google.maps.LatLng(GF_Geo.map.args.latitude,GF_Geo.map.args.longitude),GF_Geo.map.options={zoom:parseInt(GF_Geo.map.args.zoom_level),center:GF_Geo.map.latlng,mapTypeId:google.maps.MapTypeId[GF_Geo.map.args.map_type]},GF_Geo.map.map=new google.maps.Map(document.getElementById("ggf-map"),GF_Geo.map.options),GF_Geo.map.marker=new google.maps.Marker({position:GF_Geo.map.latlng,map:GF_Geo.map.map,draggable:!0}),google.maps.event.addListener(GF_Geo.map.marker,"dragend",function(e){GF_Geo.processing.status=!0,GF_Geo.processing.element="map",GF_Geo.processing.coords={lat:e.latLng.lat(),lng:e.latLng.lng()},GF_Geo.geocoder([e.latLng.lat(),e.latLng.lng()],GF_Geo.map_geocoder_success,!1)}),gform.addAction("gform_post_conditional_logic_field_action",function(e,t,o,a,d){if(!d&&"show"==t){var i=jQuery(o),r=i.find("div#ggf-map");r.length&&(google.maps.event.trigger(GF_Geo.map.map,"resize"),GF_Geo.map.map.panTo(GF_Geo.map.marker.position))}})},update_map:function(e,t){jQuery("#ggf-map").length&&(GF_Geo.map.latLng=new google.maps.LatLng(e,t),GF_Geo.map.marker.setPosition(GF_Geo.map.latLng),GF_Geo.map.map.panTo(GF_Geo.map.latLng))},map_geocoder_success:function(e){GF_Geo.save_location_fields(e,"map")},address_autocomplete:function(e,t){jQuery("#"+e).keypress(function(e){return 13==e.which?!1:void 0});var o=jQuery("#"+e),a=o.attr("id").split("_"),d=GF_Geo.options.fields[a[a.length-1]];if(o.hasClass("gform-address-field"))var i=document.getElementById(o.find(".ggf-advanced-address-autocomplete").attr("id"));else var i=document.getElementById(o.find("div :input").attr("id"));if(0==d.restrictions)var r={};else var r={componentRestrictions:{country:d.restrictions}};var s=new google.maps.places.Autocomplete(i,r);google.maps.event.addListener(s,"place_changed",function(e){var t=s.getPlace();if(t.geometry&&(jQuery(i).trigger("change"),(o.hasClass("ggf-full-address")||o.hasClass("ggf-advanced-geocode-true"))&&GF_Geo.save_location_fields(t,"autocomplete"),0!=jQuery("#ggf-map").length&&1==d.update_map&&GF_Geo.update_map(t.geometry.location.lat(),t.geometry.location.lng()),"ggf-advanced-address-autocomplete"==i.className)){address=t.address_components,o.find(".ggf-advanced-address-cf-field input").val("");var a=!1;for(x in address)"street_number"==address[x].types&&(a=address[x].long_name,o.find(".ggf-cf-street_number input, .ggf-field-street_number input").val(a).trigger("change")),"route"==address[x].types&&(street_name=address[x].long_name,o.find(".ggf-cf-street_name input, .ggf-field-street_name input").val(street_name).trigger("change"),0!=a?("undefined"!=typeof GF_Geo.options.address_fields.street_fix.enabled&&1==GF_Geo.options.address_fields.street_fix.enabled?street=street_name+" "+a:street=a+" "+street_name,o.find(".ggf-cf-street input, .ggf-field-street input").val(street).trigger("change")):o.find(".ggf-cf-street input, .ggf-field-street input").val(street_name).trigger("change")),"locality,political"==address[x].types&&o.find(".ggf-cf-city input, .ggf-field-city input").val(address[x].long_name).trigger("change"),"administrative_area_level_1,political"==address[x].types&&(state=address[x].short_name,state_long=address[x].long_name,o.find(".ggf-cf-state input, .ggf-field-state input").val(state).trigger("change"),o.find('.ggf-cf-state option[value="'+state_long+'"], .ggf-field-state option[value="'+state_long+'"]').attr("selected","selected"),o.find('.ggf-cf-state_long option[value="'+state_long+'"], .ggf-field-state_long option[value="'+state_long+' "]').attr("selected","selected")),"postal_code"==address[x].types&&o.find(".ggf-cf-zipcode input, .ggf-field-zipcode input").val(address[x].long_name).trigger("change"),"country,political"==address[x].types&&(country=address[x].short_name,country_long=address[x].long_name,o.find(".ggf-cf-country input, .ggf-field-country input").val(country).trigger("change"),o.find('.ggf-cf-country option[value="'+country_long+'"], .ggf-field-country option[value="'+country_long+'"]').attr("selected","selected"),o.find('.ggf-cf-country_long option[value="'+country_long+'"], .ggf-field-country_long option[value="'+country_long+'"]').attr("selected","selected"))}})},save_location_fields:function(e,t){GF_Geo.clear_fields(),address_fields={street_number:"",street_name:"",street:"",premise:"",neighborhood:"",city:"",region_code:"",region_name:"",country:"",postcode:"",country_code:"",country_name:"",address:e.formatted_address,formatted_address:e.formatted_address,lat:e.geometry.location.lat(),lng:e.geometry.location.lng()},1==GF_Geo.processing.status&&"map"==GF_Geo.processing.element?(address_fields.lat=GF_Geo.processing.coords.lat,address_fields.lng=GF_Geo.processing.coords.lng):(address_fields.lat=e.geometry.location.lat(),address_fields.lng=e.geometry.location.lng()),jQuery('.ggf-cf-lat input[type="text"], .ggf-cf-lat input[type="hidden"], #ggf-field-lat').val(address_fields.lat).trigger("change"),jQuery('.ggf-cf-lng input[type="text"], .ggf-cf-lng input[type="hidden"], #ggf-field-lng').val(address_fields.lng).trigger("change"),"map"==t?(jQuery('.map-autofill input[type="text"], .map-autofill input[type="hidden"]').val(""),jQuery('.map-autofill.ggf-full-address input[type="text"], .map-autofill.ggf-full-address input[type="hidden"]').val(address_fields.formatted_address)):"locator"==t&&(jQuery('.locator-fill input[type="text"], .locator-fill input[type="hidden"]').val(""),jQuery('.locator-fill.ggf-full-address input[type="text"], .locator-fill.ggf-full-address input[type="hidden"]').val(address_fields.formatted_address)),jQuery("#ggf-field-formatted_address").val(address_fields.formatted_address),jQuery('.ggf-cf-formatted_address input[type="text"], .ggf-cf-formatted_address input[type="hidden"]').val(address_fields.formatted_address),address=e.address_components;for(x in address)"street_number"==address[x].types&&void 0!=address[x].long_name&&(address_fields.street_number=address[x].long_name,jQuery('#ggf-field-street_number, .ggf-cf-street_number input[type="text"], .ggf-cf-street_number input[type="hidden"]').val(address_fields.street_number).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-street_number input[type="text"], .map-autofill.ggf-field-street_number input[type="hidden"]').val(address_fields.street_number).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-street_number input[type="text"], .locator-fill.ggf-field-street_number input[type="hidden"]').val(address_fields.street_number).trigger("change")),"route"==address[x].types&&void 0!=address[x].long_name&&(address_fields.street_name=address[x].long_name,jQuery('#ggf-field-street_name, .ggf-cf-street_name input[type="text"], .ggf-cf-street_name input[type="hidden"]').val(address_fields.street_name).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-street_name input[type="text"], .map-autofill.ggf-field-street_name input[type="hidden"]').val(address_fields.street_name).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-street_name input[type="text"], .locator-fill.ggf-field-street_name input[type="hidden"]').val(address_fields.street_name).trigger("change"),""!=address_fields.street_number?"undefined"!=typeof GF_Geo.options.address_fields.street_fix.enabled&&1==GF_Geo.options.address_fields.street_fix.enabled?address_fields.street=address_fields.street_name+" "+address_fields.street_number:address_fields.street=address_fields.street_number+" "+address_fields.street_name:address_fields.street=address_fields.street_name,jQuery('#ggf-field-street, .ggf-cf-street input[type="text"], .ggf-cf-street input[type="hidden"]').val(address_fields.street).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-street input[type="text"], .map-autofill.ggf-field-street input[type="hidden"]').val(address_fields.street).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-street input[type="text"], .locator-fill.ggf-field-street input[type="hidden"]').val(address_fields.street).trigger("change")),"subpremise"==address[x].types&&void 0!=address[x].long_name&&(address_fields.premise=address[x].long_name,jQuery('#ggf-field-apt, .ggf-cf-apt input[type="text"], .ggf-cf-apt input[type="hidden"]').val(address_fields.permise).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-apt input[type="text"], .map-autofill.ggf-field-apt input[type="hidden"]').val(address_fields.permise).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-apt input[type="text"], .locator-fill.ggf-field-apt input[type="hidden"]').val(address_fields.permise).trigger("change")),"neighborhood,political"==address[x].types&&void 0!=address[x].long_name&&(address_fields.neighborhood=address[x].long_name,jQuery('#ggf-field-neighborhood, .ggf-cf-neighborhood input[type="text"], .ggf-cf-neighborhood input[type="hidden"]').val(address_fields.neighborhood).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-neighborhood input[type="text"], .map-autofill.ggf-field-neighborhood input[type="hidden"]').val(address_fields.neighborhood).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-neighborhood input[type="text"], .locator-fill.ggf-field-neighborhood input[type="hidden"]').val(address_fields.neighborhood).trigger("change")),"locality,political"==address[x].types&&void 0!=address[x].long_name&&(address_fields.city=address[x].long_name,jQuery('#ggf-field-city, .ggf-cf-city input[type="text"], .ggf-cf-city input[type="hidden"]').val(address_fields.city).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-city input[type="text"], .map-autofill.ggf-field-city input[type="hidden"]').val(address_fields.city).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-city input[type="text"], .locator-fill.ggf-field-city input[type="hidden"]').val(address_fields.city).trigger("change")),"administrative_area_level_1,political"==address[x].types&&(address_fields.region_name=address[x].long_name,address_fields.region_code=address[x].short_name,jQuery('#ggf-field-state, .ggf-cf-state input[type="text"], .ggf-cf-state input[type="hidden"]').val(address_fields.region_code).trigger("change"),jQuery('#ggf-field-state_long, .ggf-cf-state_long input[type="text"], .ggf-cf-state_long input[type="hidden"]').val(address_fields.region_name).trigger("change"),jQuery('.ggf-cf-state select option[value="'+address_fields.region_name+'"], .ggf-cf-state_long select option[value="'+address_fields.region_name+'"]').attr("selected","selected"),jQuery('.ggf-cf-state ul.gfield_checkbox input[value="'+address_fields.region_code+'"], .ggf-cf-state ul.gfield_radio input[value="'+address_fields.region_code+'"]').prop("checked",!0),jQuery('.ggf-cf-state_long ul.gfield_checkbox input[value="'+address_fields.region_name+'"], .ggf-cf-state_long ul.gfield_radio input[value="'+address_fields.region_name+'"]').prop("checked",!0),"map"==t?(jQuery('.map-autofill.ggf-field-state input[type="text"], .map-autofill.ggf-field-state input[type="hidden"]').val(address_fields.region_code).trigger("change"),jQuery('.map-autofill.ggf-field-state_long input[type="text"], .map-autofill.ggf-field-state_long input[type="hidden"]').val(address_fields.region_name).trigger("change"),jQuery('.map-autofill.ggf-field-state select option[value="'+address_fields.region_name+'"], .map-autofill.ggf-field-state_long select option[value="'+address_fields.region_name+'"]').attr("selected","selected"),jQuery('.map-autofill.ggf-field-state ul.gfield_radio input[value="'+address_fields.region_name+'"], .map-autofill.ggf-field-state_long ul.gfield_radio input[value="'+address_fields.region_name+'"]').prop("checked",!0),jQuery('.map-autofill.ggf-field-state ul.gfield_checkbox input[value="'+address_fields.region_name+'"], .map-autofill.ggf-field-state_long ul.gfield_checbox input[value="'+address_fields.region_name+'"]').prop("checked",!0)):"locator"==t&&(jQuery('.locator-fill.ggf-field-state input[type="text"], .locator-fill.ggf-field-state input[type="hidden"]').val(address_fields.region_code).trigger("change"),jQuery('.locator-fill.ggf-field-state_long input[type="text"], .locator-fill.ggf-field-state_long input[type="hidden"]').val(address_fields.region_name).trigger("change"),jQuery('.locator-fill.ggf-field-state select option[value="'+address_fields.region_name+'"], .locator-fill.ggf-field-state_long select option[value="'+address_fields.region_name+'"]').attr("selected","selected"),jQuery('.locator-fill.ggf-field-state ul.gfield_radio input[value="'+address_fields.region_name+'"], .locator-fill.ggf-field-state_long ul.gfield_radio input[value="'+address_fields.region_name+'"]').prop("checked",!0),jQuery('.locator-fill.ggf-field-state ul.gfield_checkbox input[value="'+address_fields.region_name+'"], .locator-fill.ggf-field-state_long ul.gfield_checbox input[value="'+address_fields.region_name+'"]').prop("checked",!0))),"administrative_area_level_2,political"==address[x].types&&void 0!=address[x].long_name&&(address_fields.county=address[x].long_name,jQuery('#ggf-field-county, .ggf-cf-county input[type="text"], .ggf-cf-county input[type="hidden"]').val(address_fields.county).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-county input[type="text"], .map-autofill.ggf-field-county input[type="hidden"]').val(address_fields.county).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-county input[type="text"], .locator-fill.ggf-field-county input[type="hidden"]').val(address_fields.county).trigger("change")),"postal_code"==address[x].types&&void 0!=address[x].long_name&&(address_fields.postcode=address[x].long_name,jQuery('#ggf-field-zipcode, .ggf-cf-zipcode input[type="text"], .ggf-cf-zipcode input[type="hidden"]').val(address_fields.postcode).trigger("change"),"map"==t?jQuery('.map-autofill.ggf-field-zipcode input[type="text"], .map-autofill.ggf-field-zipcode input[type="hidden"]').val(address_fields.postcode).trigger("change"):"locator"==t&&jQuery('.locator-fill.ggf-field-zipcode input[type="text"], .locator-fill.ggf-field-zipcode input[type="hidden"]').val(address_fields.postcode).trigger("change")),"country,political"==address[x].types&&(address_fields.country_name=address[x].long_name,address_fields.country_code=address[x].short_name,jQuery('#ggf-field-country, .ggf-cf-country input[type="text"], .ggf-cf-country input[type="hidden"]').val(address_fields.country_code).trigger("change"),jQuery('#ggf-field-country_long, .ggf-cf-country_long input[type="text"], .ggf-cf-country_long input[type="hidden"]').val(address_fields.country_name).trigger("change"),jQuery('.ggf-cf-countryselect option[value="'+address_fields.country_name+'"], .ggf-cf-country_long select option[value="'+address_fields.country_name+'"]').attr("selected","selected"),jQuery('.ggf-cf-country ul.gfield_checkbox input[value="'+address_fields.country_code+'"], .ggf-cf-country ul.gfield_radio input[value="'+address_fields.country_code+'"]').prop("checked",!0),jQuery('.ggf-cf-country_long ul.gfield_checkbox input[value="'+address_fields.country_name+'"], .ggf-cf-country_long ul.gfield_radio input[value="'+address_fields.country_name+'"]').prop("checked",!0),"map"==t?(jQuery('.map-autofill.ggf-field-country input[type="text"], .map-autofill.ggf-field-country input[type="hidden"]').val(address_fields.country_code).trigger("change"),jQuery('.map-autofill.ggf-field-country_long input[type="text"], .map-autofill.ggf-field-country_long input[type="hidden"]').val(address_fields.country_name).trigger("change"),jQuery('.map-autofill.ggf-field-country select option[value="'+address_fields.country_name+'"], .map-autofill.ggf-field-country_long select option[value="'+address_fields.country_name+'"]').attr("selected","selected"),jQuery('.map-autofill.ggf-field-country ul.gfield_radio input[value="'+address_fields.country_name+'"], .map-autofill.ggf-field-country_long ul.gfield_radio input[value="'+address_fields.country_name+'"]').prop("checked",!0),jQuery('.map-autofill.ggf-field-country ul.gfield_checkbox input[value="'+address_fields.country_name+'"], .map-autofill.ggf-field-country_long ul.gfield_checbox input[value="'+address_fields.country_name+'"]').prop("checked",!0)):"locator"==t&&(jQuery('.locator-fill.ggf-field-country input[type="text"], .locator-fill.ggf-field-country input[type="hidden"]').val(address_fields.country_code).trigger("change"),jQuery('.locator-fill.ggf-field-country_long input[type="text"], .locator-fill.ggf-field-country_long input[type="hidden"]').val(address_fields.country_name).trigger("change"),jQuery('.locator-fill.ggf-field-country select option[value="'+address_fields.country_name+'"], .locator-fill.ggf-field-country_long select option[value="'+address_fields.country_name+'"]').attr("selected","selected"),jQuery('.locator-fill.ggf-field-country ul.gfield_radio input[value="'+address_fields.country_name+'"], .locator-fill.ggf-field-country_long ul.gfield_radio input[value="'+address_fields.country_name+'"]').prop("checked",!0),jQuery('.locator-fill.ggf-field-country ul.gfield_checkbox input[value="'+address_fields.country_name+'"], .locator-fill.ggf-field-country_long ul.gfield_checbox input[value="'+address_fields.country_name+'"]').prop("checked",!0)));return address_fields},auto_locator:function(e,t,o){GF_Geo.auto_locator.status=!0,GF_Geo.auto_locator.id=e,GF_Geo.auto_locator.success=t,GF_Geo.auto_locator.failed=o,jQuery(".ggf-field-locator-wrapper .ggf-locator-button").fadeOut("fast",function(){jQuery(".ggf-locator-spinner").fadeIn()}),jQuery(".ggf-locator-spinner-wrapper").fadeIn(),GF_Geo.navigator(GF_Geo.auto_locator_success,GF_Geo.auto_locator_failed)},auto_locator_success:function(e){address_fields=GF_Geo.save_location_fields(e,"locator"),setTimeout(function(){jQuery(".ggf-field-locator-wrapper .ggf-locator-spinner").fadeOut("fast",function(){jQuery(".ggf-field-locator-wrapper .ggf-locator-button").fadeIn()}),jQuery(".ggf-locator-spinner-wrapper").fadeOut()},500),jQuery("input[type=text]#input_"+GF_Geo.options.id+"_"+GF_Geo.auto_locator.id+", #field_"+GF_Geo.options.id+"_"+GF_Geo.auto_locator.id+" .ggf-advanced-address-autocomplete").val(address_fields.formatted_address),0!=GF_Geo.auto_locator.success?GF_Geo.auto_locator.success(address_fields,e):(GF_Geo.auto_locator.status=!1,GF_Geo.auto_locator.type=!1,GF_Geo.auto_locator.success=!1,GF_Geo.auto_locator.failed=!1)},auto_locator_failed:function(e){setTimeout(function(){jQuery(".ggf-field-locator-wrapper .ggf-locator-spinner").fadeOut("fast",function(){jQuery(".ggf-field-locator-wrapper .ggf-locator-button").fadeIn()}),jQuery(".ggf-locator-spinner-wrapper").fadeOut()},500),0!=GF_Geo.auto_locator.failed?GF_Geo.auto_locator.failed(e):(alert(e),GF_Geo.auto_locator.status=!1,GF_Geo.auto_locator.type=!1,GF_Geo.auto_locator.success=!1,GF_Geo.auto_locator.failed=!1)},page_locator_success:function(e,t){GF_Geo.update_map(e.lat,e.lng),GF_Geo.auto_locator.status=!1,GF_Geo.auto_locator.type=!1,GF_Geo.auto_locator.success=!1,GF_Geo.auto_locator.failed=!1},locator_button_success:function(e,t){return"undefined"!=typeof GF_Geo.options.fields[GF_Geo.auto_locator.id]&&(1==GF_Geo.options.fields[GF_Geo.auto_locator.id].locator_autosubmit&&(GF_Geo.auto_locator.auto_submit=!0),"undefined"!=GF_Geo.options.fields[GF_Geo.auto_locator.id].locator_found_message_use&&1==GF_Geo.options.fields[GF_Geo.auto_locator.id].locator_found_message_use&&alert(GF_Geo.options.fields[GF_Geo.auto_locator.id].locator_found_message)),GF_Geo.update_map(e.lat,e.lng),1==GF_Geo.auto_locator.auto_submit?GF_Geo.submit_form():(GF_Geo.auto_locator.status=!1,GF_Geo.auto_locator.type=!1,GF_Geo.auto_locator.success=!1,GF_Geo.auto_locator.failed=!1,void(GF_Geo.auto_locator.auto_submit=!1))},form_submission:function(e){""==jQuery("#ggf-field-lat").val()||""==jQuery("#ggf-field-lng").val()?(e.preventDefault(),geoAddress=[],1==GF_Geo.options.address_fields.use?(geoAddress.push(jQuery('.ggf-full-address input[type="text"]').val()),geoAddress=geoAddress.join(" ")):(2==GF_Geo.options.address_fields.use||3==GF_Geo.options.address_fields.use)&&(jQuery.each(["street","city","state","zipcode","country"],function(e,t){jQuery(".ggf-field-"+t).length&&jQuery.trim(jQuery(".ggf-field-"+t+' input[type="text"]').val()).length&&geoAddress.push(jQuery(".ggf-field-"+t+' input[type="text"]').val())}),geoAddress=geoAddress.join(" ")),void 0!=geoAddress&&null!=geoAddress&&jQuery.trim(geoAddress).length?GF_Geo.geocoder(geoAddress,GF_Geo.form_geocoder_success,GF_Geo.geocoder_failed):GF_Geo.submit_form()):GF_Geo.submit_form()},form_geocoder_success:function(e){address_fields=GF_Geo.save_location_fields(e),GF_Geo.submit_form()}};jQuery(document).bind("gform_post_render",function(){GF_Geo.init()});